.data
	a: .asciiz "A"
	bb: .asciiz "B"
	c: .asciiz "C"
	movedisk: .asciiz "move disk "
	from: .asciiz " from "
	to: .asciiz "to "
	newline: .asciiz "\n"
	


.text
main:
	li $v0, 5
	syscall
	move $a0, $v0
	
	lb $a1, a
	lb $a2, bb
	lb $a3, c
	jal hanoi
	
	li $v0, 10
	syscall
hanoi:
	beq $s0, 0, if_end
if:
	li $s1, 0	#È½¼ö
	
	move $a0, $s0	#base
	lb $a1, a	#a1 = a = from
	lb $a2, bb	#a2 = b = via
	lb $a3, c
	jal move_
	
	move $a0, $s0
	lb $a1, bb	# b = via
	lb $a2, c	#c = to 
	jal move_
	
	jr $ra
if_end:
	bne $a0, 1, else
	addi $sp, $sp, -20
	sw $a0, 0($sp)	#base
	sw $a1, 4($sp)	#from
	sw $a2, 8($sp)	#via
	sw $a3, 12($sp)	#to
	sw $ra, 16($sp)	
	#move $a0, $a1
	#move $a1, $a3
	addi $a0, $a0, -1
	#move $t0, $a1
	#move $a1, $a2
	#move $a2, $t0
	jal hanoi
	lw $a0, 0($sp)	#base
	lw $a1, 4($sp)	#from
	lw $a2, 8($sp)	#via
	lw $a3, 12($sp)	#to
	lw $ra, 16($sp)	
	addi $sp, $sp, 20
	
	addi $a0, $a0, 1
	lb $a1, a
	lb $a2, bb
	jal move_
	
	addi $sp, $sp, -20
	sw $a0, 0($sp)	#base
	sw $a1, 4($sp)	#from
	sw $a2, 8($sp)	#via
	sw $a3, 12($sp)	#to
	sw $ra, 16($sp)	
	move $a0, $a1
	move $a2, $a3
	addi $a0, $a0, -1
	#move $t0, $a3
	#move $a3, $a2
	#move $a2, $t0
	jal hanoi
	lw $a0, 0($sp)	#base
	lw $a1, 4($sp)	#from
	lw $a2, 8($sp)	#via
	lw $a3, 12($sp)	#to
	lw $ra, 16($sp)	
	addi $sp, $sp, 20
	
	addi $a0, $a0, 1
	lb $a2, bb	# b = via
	lb $a3, c	#c = to 
	move $a0, $s0
	jal move_
	
	addi $sp, $sp, -20
	sw $a0, 0($sp)	#base
	sw $a1, 4($sp)	#from
	sw $a2, 8($sp)	#via
	sw $a3, 12($sp)	#to
	sw $ra, 16($sp)	
	addi $a0, $a0, -1
	move $t0, $a1
	move $a1, $a2
	move $a2, $t0
	jal hanoi
	
else: 
	
move_:
	la $a0, movedisk
	li $v0, 4
	syscall
	
	addi $a0, $a0, 0
	li $v0, 1
	syscall
	
	la $a0, from
	li $v0, 4
	syscall
	
	move $a0, $a1
	li $v0, 11
	syscall
	
	la $a0, to
	li $v0, 4
	syscall
	
	addi $a0, $a2, 0
	li $v0, 4
	syscall
	
	la $a0, newline
	li $v0, 4
	syscall
	
	jr $ra
	
	